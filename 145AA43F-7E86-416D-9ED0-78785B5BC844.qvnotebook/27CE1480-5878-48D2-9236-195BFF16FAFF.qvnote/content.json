{
  "title": "GraphDB算法支持",
  "cells": [
    {
      "type": "markdown",
      "data": "图数据库有别于别的数据库（关系型，文档型，nosql）的一个重大区别是图数据库建立在图模型上，需要提供对图数据结构相关的算法。图数据结构在一二维数据结构中是最复杂，同时也是最全面的。包括地图网络社交等复杂的关系场景都是建立在图之上的。因此算法支持对于图数据库的使用来说是一个很重要的指标\n\n## 算法框架\n\n每个图数据库都对图算法的支持做了\n\n1. ArangoDB -- Pregel\n2. neo4j graph-algorithms-algo plugins\n3. Gremlin\n4. PL/pgSQL和PL/Python\n\n## 支持的算法\n对于图模型来说，图遍历，最短路径，最小生成树，图的中心性算法，图的联通性都是最基本的算法。其他算法都是围绕这些基本算法结合实际做的变种。\n\nArangoDB：\n- Page Rank\n- Single-Source Shortest Path\n- Connected Components\n- Hyperlink-Induced Topic Search (HITS)\n- Vertex Centrality\n- Effective Closeness\n- LineRank\n- Community Detection\n- Label Propagation\n- Speaker-Listener Label PropagationPermalink\n\n\nneo4j：\n\nneo4j 采用了插件式的算法集成，\n\n > 针对算法方面，neo4j又出书了。在实际应用场景中将运用图算法，帮助我们快速将图算法中运用到实际应用中。因此这里也会针对neo4j的算法为基点，来分析neo4j以及其他图数据库在算法方面的特点。\n \n\n## 总结\nArangoDB是基于pregel实现了对图的计算，在自身分布式存储的基础上可以做到分布式计算，（但是分布式计算也存在限制以及性能问题），并且可以很好的融入到pregel的生态中。\n相对ArangoDB，neo4j的算法是插件式的，算法扩展和二次开发上提供了很大的便利；这也限制了neo4j的算法都在是堆内存中计算的，需要大数据量计算的场景可能会有些限制。ArangoDB虽然也是将计算全部放在内存中，但是由于是原生实现的，提供了内存映射来使用硬盘充当一部分内存。"
    }
  ]
}