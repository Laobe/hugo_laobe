{
  "title": "GraphDB查询语言",
  "cells": [
    {
      "type": "markdown",
      "data": "对于数据库来说，查询语言就像是我们与数据库交流的方式。查询语言的特点影响着我们的使用体验，以及能挖掘出多少数据库的能力。查询语言也就成了我们最开始要关注的重点\n\n\nAQL\n\nCypher\n\nGremlin\n\nAQL 是arangodb设计的查询语言，由于arangodb是定义为多模型的数据库，因此数据的存储都是基于文档型的，所以AQL语法中很大一部分是涉及到文档的CRUD。并且在语法风格上保持跟SQL很相似。\n\n针对文档的存储模型，arangodb设计了database，collection，document，attribute 的模型。\n\nSQLAQLdatabasedatabasetablecollectionrowdocumentcolumnattributetable joinscollection joinsprimary keyprimary key (automatically present on `_key` attribute)indexindex在图模型的设计上，设计了vertex 和 edge 两个模型。这两个模型都是基于文档存储的，在edge中\n\nGremlin既是一个查询语言，又是一个计算框架，提供了很多图算法的计算能力。\n\n### 查询语言\n\n[AQL](https://www.arangodb.com/wp-content/uploads/2016/05/shell-reference-card.pdf)：ArangoDB自己定义的查询语言，由于是文档模型上设计的图模型因此很多语法都跟文档相关，有collection,document,edge的概念，文档的模式跟mongodb类似\n\n[Cypher](http://www.opencypher.org): neo4j定义出来的一个想要成为图数据库标准的图模型描述语言，现在也比较受业界认可，除了neo4j之外，agensgraph也是在PostgreSQL是实现了cypher语法，另外也和databricks合作，将cypher在spark上集成了。\n\n```\n\n MATCH (d:Database)-[:USES]-\\>(Cypher)-[:QUERIES]-\\>(:Model:Graph)\n\n WHERE d.name IN ['SAP HANA Graph','Redis','AgensGraph', 'Neo4j',...]\n\n RETURN Cypher.features\n\n```\n\nGremlin: 这个语法更像是编程API，而不像查询语言。因此可以自己定义出更复杂的查询搜索功能\n\n```\n\n```\n  // What is the distribution of job titles amongst Gremlin's collaborators?\n    g.V().has(\"name\",\"gremlin\").as(\"a\").\n      out(\"created\").in(\"created\").\n        where(neq(\"a\")).\n      groupCount().by(\"title\")\n\n```\n\n```\n\nMongoDB CRUD: mongodb是文档数据库，其主要概念就是collection和document，crud操作也是基于这两个概念，并且由于文档直接的关联概念比较小，不像图模型中处处存在联系，因此关联查询那块比较弱，也不会主要有MATCH那个概念。"
    }
  ]
}